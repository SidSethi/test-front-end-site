name: EarthFast Release
description: Create an EarthFast bundle and upload it as a release asset.

inputs:
  build_dir:
    description: Project build directory
    required: true
  bundle_name:
    description: Name for the bundle
    required: true
  github_token:
    description: Auth token for the GitHub CLI
    required: true
  release_name:
    description: Name of the release
    required: false

outputs:
  bundle_url:
    description: Download URL for the bundle
    value: ${{ steps.urls.outputs.bundle }}
  checksum:
    description: Integrity checksum of the bundle
    value: ${{ steps.checksum.outputs.checksum }}

runs:
  using: composite
  steps:
    - name: Set release name from input or fallback to ref name
      id: determine_release_name
      run: |
        if [ -z "${{ inputs.release_name }}" ]; then
          release_name="${{ github.ref_name }}"
        else
          release_name="${{ inputs.release_name }}"
        fi
        echo "release_name=$release_name" >> $GITHUB_ENV
      shell: bash

    - name: Create bundle file
      id: bundle
      run: |
        filename="$(npx earthfast-cli bundle create ${{ inputs.bundle_name }} ${{ inputs.build_dir }})"
        echo "filename=$filename" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create checksum file
      id: checksum
      run: |
        # Retrieve the filename from the previous step
        filename="${{ steps.bundle.outputs.filename }}"
        if [ -z "$filename" ]; then
          echo "Error: Bundle filename is empty."
          exit 1
        fi

        # Generate checksum
        checksum="$(npx earthfast-cli bundle checksum "$filename")"
        if [ $? -ne 0 ]; then
          echo "Error: Failed to generate checksum."
          exit 1
        fi

        # Write checksum to GITHUB_OUTPUT
        echo "checksum=$checksum" >> $GITHUB_OUTPUT

        # Create checksum file
        checksum_filename="${filename}_SHA256SUM"
        echo "$checksum" > "$checksum_filename"
        echo "filename=$checksum_filename" >> $GITHUB_OUTPUT
      shell: bash

    - name: Upload bundle and checksum to the release
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        gh release upload "${{ env.release_name }}" "${{ steps.bundle.outputs.filename }}"
        gh release upload "${{ env.release_name }}" "${{ steps.checksum.outputs.filename }}"
      shell: bash

    - name: Retrieve URLs
      id: urls
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        bundle="$(gh release view "${{ env.release_name }}" --json assets --jq '.assets[] | select(.name == "${{ steps.bundle.outputs.filename }}") | .url')"
        echo "bundle=$bundle" >> $GITHUB_OUTPUT
      shell: bash
